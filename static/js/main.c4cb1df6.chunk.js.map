{"version":3,"sources":["feat/users/components/Map.js","feat/users/actions.js","feat/users/components/UserTableRow.js","feat/users/components/UserTableHeader.js","feat/users/components/UserTableFooter.js","feat/users/components/UserTable.js","App.js","lib/api.js","feat/users/reducer.js","lib/store.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","breakpoints","leaflet","width","height","down","Map","selectedUsers","useSelector","state","selected","classes","markers","Object","keys","map","userId","user","lat","address","geo","lng","name","Marker","position","Popup","id","MapContainer","center","zoom","scrollWheelZoom","className","TileLayer","attribution","url","getUsers","createAsyncThunk","_","a","api","extra","rejectWithValue","data","console","error","message","toggleUser","createAction","sendSelectedUsers","preparedValues","zipcode","sendUsers","UserTableRow","phone","dispatch","useDispatch","isSelected","TableRow","hover","TableCell","align","padding","Checkbox","checked","onChange","UserTableHeader","TableHead","color","palette","main","UserTableFooter","loading","disabled","length","Box","display","alignItems","px","my","Button","startIcon","CircularProgress","size","undefined","onClick","variant","ml","table","margin","UserTable","users","Paper","TableContainer","Table","TableBody","row","appWrapper","flexDirection","App","useEffect","justifyContent","flexGrow","called","fetch","process","resp","json","status","Error","route","method","body","JSON","stringify","headers","authorization","usersReducer","createSlice","initialState","extraReducers","pending","fulfilled","action","payload","rejected","selectedUsersReducer","current","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","devTools","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c4cb1df6.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(({ breakpoints }) => ({\n  leaflet: {\n    width: \"100%\",\n    height: 400,\n    [breakpoints.down(\"sm\")]: {\n      height: 300,\n    },\n  },\n}));\n\nexport const Map = () => {\n  const selectedUsers = useSelector((state) => state.selectedUsers.selected);\n  const classes = useStyles();\n\n  const markers = Object.keys(selectedUsers).map((userId) => {\n    const user = selectedUsers[userId];\n\n    if (!user) {\n      return null;\n    }\n\n    const lat = user?.address?.geo?.lat ?? 0;\n    const lng = user?.address?.geo?.lng ?? 0;\n    const name = user?.name ?? \"Без имени\";\n\n    return (\n      <Marker position={[lat, lng]} key={user.id}>\n        <Popup>{name}</Popup>\n      </Marker>\n    );\n  });\n\n  return (\n    <MapContainer\n      center={[0, 0]}\n      zoom={1}\n      scrollWheelZoom={false}\n      className={classes.leaflet}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {markers}\n    </MapContainer>\n  );\n};\n","import { createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\n\nexport const getUsers = createAsyncThunk(\n  \"users/getUsers\",\n  async (_, { extra: { api }, rejectWithValue }) => {\n    try {\n      const data = api.getUsers();\n\n      return data;\n    } catch (error) {\n      console.error(error);\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const toggleUser = createAction(\"selectedUsers/toggle\");\n\nexport const sendSelectedUsers = createAsyncThunk(\n  \"selectedUsers/sendSelectedUsers\",\n  async (selectedUsers, { extra: { api }, rejectWithValue }) => {\n    const preparedValues = Object.keys(selectedUsers).map((userId) => {\n      const user = selectedUsers[userId];\n\n      return {\n        id: user.id,\n        zipcode: user.zipcode,\n      };\n    });\n\n    try {\n      const data = await api.sendUsers(preparedValues);\n\n      return data;\n    } catch (error) {\n      console.error(error);\n      return rejectWithValue(error.message);\n    }\n  }\n);\n","import { useDispatch, useSelector } from \"react-redux\";\n\n// components\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport { toggleUser } from \"../actions\";\n\nexport const UserTableRow = ({ id, name, phone, address }) => {\n  const dispatch = useDispatch();\n  const selectedUsers = useSelector((state) => state.selectedUsers.selected);\n  const isSelected = !!selectedUsers[id];\n\n  const onClick = () => dispatch(toggleUser({ id, zipcode: address?.zipcode }));\n\n  return (\n    <TableRow hover>\n      <TableCell>{name}</TableCell>\n      <TableCell align=\"right\">{phone}</TableCell>\n      <TableCell padding=\"checkbox\">\n        <Checkbox checked={isSelected} onChange={onClick} />\n      </TableCell>\n    </TableRow>\n  );\n};\n","import TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport const UserTableHeader = () => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Имя</TableCell>\n        <TableCell align=\"right\">Телефон</TableCell>\n        <TableCell padding=\"checkbox\"></TableCell>\n      </TableRow>\n    </TableHead>\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\n\n// components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// redux\nimport { sendSelectedUsers } from \"../actions\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n  error: {\n    color: palette.error.main,\n  },\n}));\n\nexport const UserTableFooter = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const selectedUsers = useSelector((state) => state.selectedUsers.selected);\n  const loading = useSelector((state) => state.selectedUsers.loading);\n  const error = useSelector((state) => state.selectedUsers.error);\n\n  const disabled = Object.keys(selectedUsers).length === 0;\n\n  const onButtonClick = () => dispatch(sendSelectedUsers(selectedUsers));\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" px={3} my={1}>\n      <Button\n        startIcon={\n          loading ? <CircularProgress size={20} color=\"secondary\" /> : undefined\n        }\n        onClick={onButtonClick}\n        disabled={disabled}\n        variant=\"contained\"\n        color={error ? \"secondary\" : \"primary\"}\n      >\n        Отправить\n      </Button>\n      {error ? (\n        <Box ml={2} className={classes.error}>\n          {error}\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import { useSelector } from \"react-redux\";\n\n//components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { UserTableRow } from \"./UserTableRow\";\nimport { UserTableHeader } from \"./UserTableHeader\";\nimport { UserTableFooter } from \"./UserTableFooter\";\n\nconst useStyles = makeStyles(({ breakpoints }) => ({\n  table: {\n    margin: \"10px\",\n    width: \"500px\",\n    [breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n}));\n\nexport const UserTable = () => {\n  const classes = useStyles();\n  const data = useSelector((state) => state.users.data);\n\n  return (\n    <Paper>\n      <TableContainer className={classes.table}>\n        <Table size=\"small\">\n          <UserTableHeader />\n          <TableBody>\n            {data.map((row) => (\n              <UserTableRow key={row.id} {...row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <UserTableFooter />\n    </Paper>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { Map } from \"./feat/users/components/Map\";\nimport { UserTable } from \"./feat/users/components/UserTable\";\n\n// redux\nimport { getUsers } from \"./feat/users/actions\";\n\nconst useStyles = makeStyles(({ breakpoints, palette }) => ({\n  error: {\n    color: palette.error.main,\n  },\n  appWrapper: {\n    display: \"flex\",\n    [breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  if (users?.loading) {\n    return (\n      <Box\n        display=\"flex\"\n        width=\"100vw\"\n        height=\"100vh\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <CircularProgress size={100} />\n      </Box>\n    );\n  }\n\n  if (users?.error) {\n    return (\n      <Box className={classes.error}>{users?.error ?? \"Произошла ошибка\"}</Box>\n    );\n  }\n\n  return (\n    <>\n      <Box className={classes.appWrapper}>\n        <UserTable />\n        <Box flexGrow={1}>\n          <Map />\n        </Box>\n      </Box>\n    </>\n  );\n};\n","let called = 0;\n\nexport const getUsers = async () => {\n  const resp = await fetch(process.env.REACT_APP_USERS_URL);\n  const data = await resp.json();\n\n  if (resp.status !== 200) {\n    throw new Error(\"Failed to load users list\");\n  }\n\n  return data;\n};\n\nexport const sendUsers = async (users) => {\n  // Добавляем +1 к счетчику и каждый второй запрос возвращает ошибку\n  called += 1;\n  const route = called % 2 === 0 ? \"/status/400\" : \"\";\n  const url = `${process.env.REACT_APP_USERS_SEND_URL}${route}`;\n\n  const resp = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(users),\n    headers: {\n      // В реальном приложении секретный ключ должен добавляться в заголовки на сервере\n      authorization: process.env.REACT_APP_SECRET_AUTH_TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = await resp.json();\n\n  if (resp.status !== 200) {\n    throw new Error(\"Failed to send users list\");\n  }\n\n  return data;\n};\n\nconst api = {\n  getUsers,\n  sendUsers,\n};\n\nexport default api;\n","import { createSlice, current } from \"@reduxjs/toolkit\";\n\nimport { getUsers, toggleUser, sendSelectedUsers } from \"./actions\";\n\nexport const usersReducer = createSlice({\n  name: \"users\",\n  initialState: { data: [], loading: false, error: null },\n  extraReducers: {\n    [getUsers.pending]: (state) => {\n      state.loading = true;\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    [getUsers.rejected]: (state) => {\n      state.loading = false;\n      state.error = \"Произошла ошибка при загрузке\";\n    },\n  },\n});\n\nexport const selectedUsersReducer = createSlice({\n  name: \"selectedUsers\",\n  // Выбранные пользователи хранятся в формате обьекта, чтобы легко проверить\n  // выбран он или нет для чекбокса\n  initialState: { loading: false, error: null, selected: {}, data: null },\n  extraReducers: {\n    [toggleUser]: (state, action) => {\n      // Сбрасываем предыдущее состояние ошибки\n      state.error = null;\n\n      const userId = action.payload.id;\n      // Проверяем есть ли userId в обьекте selected\n      const currentSelectedUsers = current(state.selected);\n      const isSelected = currentSelectedUsers[userId];\n\n      if (!isSelected) {\n        state.selected[userId] = action.payload;\n      } else {\n        delete state.selected[userId];\n      }\n    },\n    [sendSelectedUsers.pending]: (state) => {\n      state.loading = true;\n    },\n    [sendSelectedUsers.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    [sendSelectedUsers.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = `Произошла ошибка: ${action.payload}`;\n    },\n  },\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\n\nimport api from \"./api\";\nimport { usersReducer, selectedUsersReducer } from \"../feat/users/reducer\";\n\nconst isDev = process.env.NODE_ENV !== \"production\";\n\nconst store = configureStore({\n  reducer: {\n    users: usersReducer.reducer,\n    selectedUsers: selectedUsersReducer.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: { api },\n      },\n    }).concat(isDev ? [logger] : []),\n  devTools: isDev,\n});\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\n// components\nimport { App } from \"./App\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// utils\nimport store from \"./lib/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <CssBaseline />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}