{"version":3,"sources":["feat/users/actions.js","feat/users/components/UserTableFooter.js","feat/users/components/Map.js","feat/users/components/UserTable.js","App.js","lib/api.js","feat/users/reducer.js","lib/store.js","reportWebVitals.js","index.js"],"names":["getUsers","createAsyncThunk","_","a","api","extra","rejectWithValue","data","console","error","message","toggleUser","createAction","sendSelectedUsers","selectedUsers","preparedValues","Object","keys","map","userId","user","id","zipcode","address","sendUsers","UserTableFooter","dispatch","useDispatch","useSelector","state","selected","loading","disabled","length","className","type","shape","icon","size","undefined","onClick","color","Map","markers","lat","geo","lng","name","Marker","position","Popup","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","columns","title","dataIndex","UserTable","users","dataSource","key","phone","rowSelection","selectedRowKeys","onSelect","record","pagination","App","useEffect","style","flexGrow","called","fetch","process","resp","json","status","Error","route","method","body","JSON","stringify","headers","authorization","usersReducer","createSlice","initialState","extraReducers","pending","fulfilled","action","payload","rejected","selectedUsersReducer","current","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","devTools","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a14e9642.chunk.js","sourcesContent":["import { createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\n\nexport const getUsers = createAsyncThunk(\n  \"users/getUsers\",\n  async (_, { extra: { api }, rejectWithValue }) => {\n    try {\n      const data = api.getUsers();\n\n      return data;\n    } catch (error) {\n      console.error(error);\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const toggleUser = createAction(\"selectedUsers/toggle\");\n\nexport const sendSelectedUsers = createAsyncThunk(\n  \"selectedUsers/sendSelectedUsers\",\n  async (selectedUsers, { extra: { api }, rejectWithValue }) => {\n    const preparedValues = Object.keys(selectedUsers).map((userId) => {\n      const user = selectedUsers[userId];\n\n      return {\n        id: user.id,\n        zipcode: user.address.zipcode,\n      };\n    });\n\n    try {\n      const data = await api.sendUsers(preparedValues);\n\n      return data;\n    } catch (error) {\n      console.error(error);\n      return rejectWithValue(error.message);\n    }\n  }\n);\n","import { useSelector, useDispatch } from \"react-redux\";\n\n// components\nimport { Spin, Button } from \"antd\";\n\n// redux\nimport { sendSelectedUsers } from \"../actions\";\n\nexport const UserTableFooter = () => {\n  const dispatch = useDispatch();\n\n  const selectedUsers = useSelector((state) => state.selectedUsers.selected);\n  const loading = useSelector((state) => state.selectedUsers.loading);\n  const error = useSelector((state) => state.selectedUsers.error);\n\n  const disabled = Object.keys(selectedUsers).length === 0;\n\n  const onButtonClick = () => dispatch(sendSelectedUsers(selectedUsers));\n\n  return (\n    <div className=\"user-table-footer\">\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        icon={loading ? <Spin size=\"small\" /> : undefined}\n        onClick={onButtonClick}\n        disabled={disabled}\n        color={error ? \"secondary\" : \"primary\"}\n      >\n        Отправить\n      </Button>\n      {error ? <div>{error}</div> : null}\n    </div>\n  );\n};\n","import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { useSelector } from \"react-redux\";\n\nexport const Map = () => {\n  const selectedUsers = useSelector((state) => state.selectedUsers.selected);\n\n  // console.log(selectedUsers);\n\n  const markers = Object.keys(selectedUsers).map((userId) => {\n    const user = selectedUsers[userId];\n\n    if (!user) {\n      return null;\n    }\n\n    const lat = user?.address?.geo?.lat ?? 0;\n    const lng = user?.address?.geo?.lng ?? 0;\n    const name = user?.name ?? \"Без имени\";\n\n    return (\n      <Marker position={[lat, lng]} key={user.id}>\n        <Popup>{name}</Popup>\n      </Marker>\n    );\n  });\n\n  //console.log(selectedUsers);\n\n  return (\n    <MapContainer\n      center={[0, 0]}\n      zoom={1}\n      scrollWheelZoom={false}\n      className=\"leaflet\"\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {markers}\n    </MapContainer>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\n\n//components\nimport { Table } from \"antd\";\n\n//utils\nimport { toggleUser } from \"../actions\";\n\nconst columns = [\n  {\n    title: \"Имя\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"Телефон\",\n    dataIndex: \"phone\",\n  },\n];\n\nexport const UserTable = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.users.data);\n  const selectedUsers = useSelector((state) => state.selectedUsers.selected);\n\n  const dataSource = data.map((userId) => {\n    return {\n      id: userId?.id,\n      name: userId?.name,\n      key: userId?.id,\n      phone: userId?.phone,\n      address: userId?.address,\n    };\n  });\n\n  const selectedRowKeys = Object.keys(selectedUsers).map((userId) => {\n    const user = selectedUsers[userId];\n\n    return user.id;\n  });\n\n  const rowSelection = {\n    selectedRowKeys,\n    onSelect(record) {\n      dispatch(\n        toggleUser({\n          id: record.id,\n          zipcode: record.zipcode,\n          address: record.address,\n        })\n      );\n    },\n  };\n\n  return (\n    <div>\n      <Table\n        size=\"small\"\n        pagination={false}\n        columns={columns}\n        dataSource={dataSource}\n        rowSelection={rowSelection}\n      />\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// components\nimport { Spin } from \"antd\";\n\nimport { UserTableFooter } from \"./feat/users/components/UserTableFooter\";\nimport { Map } from \"./feat/users/components/Map\";\nimport { UserTable } from \"./feat/users/components/UserTable\";\n\n// redux\nimport { getUsers } from \"./feat/users/actions\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  if (users?.loading) {\n    return (\n      <div className=\"error-layout\">\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  if (users?.error) {\n    return <div>{users?.error ?? \"Произошла ошибка\"}</div>;\n  }\n\n  return (\n    <>\n      <div>\n        <UserTable />\n        <UserTableFooter />\n        <div style={{ flexGrow: 1 }}>\n          <Map />\n        </div>\n      </div>\n    </>\n  );\n};\n","let called = 0;\n\nexport const getUsers = async () => {\n  const resp = await fetch(process.env.REACT_APP_USERS_URL);\n  const data = await resp.json();\n\n  if (resp.status !== 200) {\n    throw new Error(\"Failed to load users list\");\n  }\n\n  return data;\n};\n\nexport const sendUsers = async (users) => {\n  // Добавляем +1 к счетчику и каждый второй запрос возвращает ошибку\n  called += 1;\n  const route = called % 2 === 0 ? \"/status/400\" : \"\";\n  const url = `${process.env.REACT_APP_USERS_SEND_URL}${route}`;\n\n  const resp = await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(users),\n    headers: {\n      // В реальном приложении секретный ключ должен добавляться в заголовки на сервере\n      authorization: process.env.REACT_APP_SECRET_AUTH_TOKEN,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = await resp.json();\n\n  if (resp.status !== 200) {\n    throw new Error(\"Failed to send users list\");\n  }\n\n  return data;\n};\n\nconst api = {\n  getUsers,\n  sendUsers,\n};\n\nexport default api;\n","import { createSlice, current } from \"@reduxjs/toolkit\";\n\nimport { getUsers, toggleUser, sendSelectedUsers } from \"./actions\";\n\nexport const usersReducer = createSlice({\n  name: \"users\",\n  initialState: { data: [], loading: false, error: null },\n  extraReducers: {\n    [getUsers.pending]: (state) => {\n      state.loading = true;\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    [getUsers.rejected]: (state) => {\n      state.loading = false;\n      state.error = \"Произошла ошибка при загрузке\";\n    },\n  },\n});\n\nexport const selectedUsersReducer = createSlice({\n  name: \"selectedUsers\",\n  // Выбранные пользователи хранятся в формате обьекта, чтобы легко проверить\n  // выбран он или нет для чекбокса\n  initialState: { loading: false, error: null, selected: {}, data: null },\n  extraReducers: {\n    [toggleUser]: (state, action) => {\n      // Сбрасываем предыдущее состояние ошибки\n      state.error = null;\n\n      const userId = action.payload.id;\n      // Проверяем есть ли userId в обьекте selected\n      const currentSelectedUsers = current(state.selected);\n      const isSelected = currentSelectedUsers[userId];\n\n      if (!isSelected) {\n        state.selected[userId] = action.payload;\n      } else {\n        delete state.selected[userId];\n      }\n    },\n    [sendSelectedUsers.pending]: (state) => {\n      state.loading = true;\n    },\n    [sendSelectedUsers.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    [sendSelectedUsers.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = `Произошла ошибка: ${action.payload}`;\n    },\n  },\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\n\nimport api from \"./api\";\nimport { usersReducer, selectedUsersReducer } from \"../feat/users/reducer\";\n\nconst isDev = process.env.NODE_ENV !== \"production\";\n\nconst store = configureStore({\n  reducer: {\n    users: usersReducer.reducer,\n    selectedUsers: selectedUsersReducer.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: { api },\n      },\n    }).concat(isDev ? [logger] : []),\n  devTools: isDev,\n});\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"antd/dist/antd.css\";\nimport \"./css/style.css\";\n\n// components\nimport { App } from \"./App\";\n\n// utils\nimport store from \"./lib/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}